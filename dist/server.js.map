{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","connect","then","client","listen","console","log","catch","error","get","req","res","send","params","customerId","issueId","id","status","message","collection","find","_id","limit","next","issue","filter","query","effort_lte","effort_gte","effort","$lte","parseInt","$gte","toArray","issues","metadata","total_count","length","records","sendFile","resolve","post","body","new_issue","created","Date","Math","floor","random","err","validateIssue","insertOne","cleanupIssue","result","insertedId","newIssue","count"],"mappings":"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","file":"server.js","sourcesContent":["// 'use strict'\r\n\r\n// const express = require('express');\r\n// const bodyParser = require('body-parser');\r\n// const MongoClient = require('mongodb').MongoClient;\r\n// const Issue = require('./issue.js');\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport Issue from './issue.js';\r\nimport path from 'path'\r\n\r\nimport 'babel-polyfill';\r\nimport SourceMapSupport from 'source-map-support';\r\nSourceMapSupport.install();\r\n\r\nconst app = express();\r\n// app.use(express.static(path.join(__dirname,'public')));\r\napp.use(express.static('public'))\r\napp.use(bodyParser.json())\r\n\r\nlet db;\r\nMongoClient.connect('mongodb://localhost').then(client =>{\r\n  db = client.db('issuetracker');\r\n  app.listen(3000,function(){\r\n    console.log('App started on port 3000');\r\n  });\r\n}).catch(error => {\r\n  console.log('ERROR', error);\r\n});\r\n\r\napp.get('/hello', (req,res) => {\r\n  console.log(\"sfgsg\");\r\n  res.send('Hello Worldssss');\r\n});\r\n\r\napp.get('/customers/:customerId', (req,res) => {\r\n  res.send('Hi ' + req.params.customerId);\r\n});\r\n\r\n// API\r\n\r\napp.get('/api/issues/:id', (req,res) => {\r\n  let issueId;\r\n  try{\r\n    issueId = new ObjectId(req.params.id);\r\n    // console.log(issueId);\r\n  }catch(error){\r\n    res.status(422).json({message: `Invalid issue Id format: ${error}`});\r\n  }\r\n\r\n  db.collection('issues').find({_id: issueId}).limit(1)\r\n  .next().then(issue => {\r\n    if(!issue)\r\n      res.status(404).json({message: `No such issue: ${issueId}`});\r\n    else\r\n      res.json(issue);\r\n  }).catch(error => {\r\n        console.log(error);\r\n        res.status(500).json({message: `Internal server error ${error}`});\r\n  });\r\n});\r\n\r\n\r\napp.get('/api/issues', (req,res) => {\r\n  const filter = {};\r\n  if(req.query.status) filter.status = req.query.status;\r\n  if(req.query.effort_lte||req.query.effort_gte) filter.effort = {};\r\n  if(req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte);\r\n  if(req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte);\r\n\r\n  // console.info(filter)\r\n\r\n  db.collection('issues').find(filter).toArray().then(issues => {\r\n    const metadata = {total_count : issues.length };\r\n    res.json({metadata: metadata , records: issues})\r\n  }).catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({message: `Internal Server Error ${error}`});\r\n  });\r\n});\r\n\r\napp.get(\"*\", (req, res) => {\r\n  res.sendFile(path.resolve('public/index.html'));\r\n});\r\n\r\napp.post('/api/issues', (req, res) => {\r\n  // console.log(req)\r\n  console.log(req.body)\r\n  const new_issue = req.body;\r\n  // new_issue.id = issues.length + 1\r\n  new_issue.created = new Date();\r\n  new_issue.effort = Math.floor((Math.random() * 100) + 1);\r\n  if(!new_issue.status){\r\n    new_issue.status = 'New'\r\n  }\r\n\r\n  const err = Issue.validateIssue(new_issue);\r\n  if(err){\r\n    res.status(422).json({message: `Invalid request ${err}`});\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').insertOne(Issue.cleanupIssue(new_issue)).then(result =>\r\n    db.collection('issues').find({_id: result.insertedId}).limit(1).next()).then(newIssue => {\r\n      // const metadata = db.collection('issues').count();\r\n      // console.log(metadata)\r\n      db.collection('issues').count().then(count => {\r\n        const metadata = {total_count : count};\r\n        res.json({metadata: metadata, new_issue: newIssue})\r\n      })\r\n    }).catch(error => {\r\n    res.status(500).json({message: `Internal server Error: ${error}`})\r\n  });\r\n\r\n  // issues.push(new_issue);\r\n  // // res.json(new_issue)\r\n  // const metadata = {total_count : issues.length };\r\n  // res.json({metadata: metadata, new_issue: new_issue})\r\n});\r\n"]}